diff --git a/src/csma/model/csma-net-device.cc b/src/csma/model/csma-net-device.cc
--- a/src/csma/model/csma-net-device.cc
+++ b/src/csma/model/csma-net-device.cc
@@ -807,6 +807,28 @@
     }
 
   //
+  // Check if this device is configure as OpenFlow switch port.
+  //
+  if (!m_openFlowRxCallback.IsNull ())
+    {
+      // If the packet is addressed to this port (which is not supposed to
+      // happen in normal situations), we hit the mac packet received trace
+      // hook, but we don't forward the packt up the stack.
+      if (packetType != PACKET_OTHERHOST)
+        {
+          m_snifferTrace (originalPacket);
+          m_macRxTrace (originalPacket);
+        }
+
+      // We forward the original packet (which includes the EthernetHeader) to
+      // the OpenFlow receive callback for all kinds of packetType we receive
+      // (broadcast, multicast, host or other host), and finish here.
+      m_openFlowRxCallback (this, originalPacket, protocol,
+        header.GetSource (), header.GetDestination (), packetType);
+      return;
+    }
+
+  //
   // If this packet is not destined for some other host, it must be for us
   // as either a broadcast, multicast or unicast.  We need to hit the mac
   // packet received trace hook and forward the packet up the stack.
@@ -1019,6 +1041,13 @@
 }
 
 void
+CsmaNetDevice::SetOpenFlowReceiveCallback (NetDevice::PromiscReceiveCallback cb)
+{
+  NS_LOG_FUNCTION (&cb);
+  m_openFlowRxCallback = cb;
+}
+
+void
 CsmaNetDevice::SetReceiveCallback (NetDevice::ReceiveCallback cb)
 {
   NS_LOG_FUNCTION (&cb);
diff --git a/src/csma/model/csma-net-device.h b/src/csma/model/csma-net-device.h
--- a/src/csma/model/csma-net-device.h
+++ b/src/csma/model/csma-net-device.h
@@ -307,6 +307,14 @@
   virtual bool NeedsArp (void) const;
 
   /**
+   * Set the callback to be used to notify the OpenFlow device when a packet
+   * has been received.
+   *
+   * \param cb The callback.
+   */
+  virtual void SetOpenFlowReceiveCallback (NetDevice::PromiscReceiveCallback cb);
+  
+  /**
    * Set the callback to be used to notify higher layers when a packet has been
    * received.
    *
@@ -689,6 +697,11 @@
   Mac48Address m_address;
 
   /**
+   * The callback used to notify OpenFlow device that a packet has been received.
+   */
+  NetDevice::PromiscReceiveCallback m_openFlowRxCallback;
+  
+  /**
    * The callback used to notify higher layers that a packet has been received.
    */
   NetDevice::ReceiveCallback m_rxCallback;
